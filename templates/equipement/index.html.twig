{% extends 'base.html.twig' %}

{% block title %}Liste des √âquipements{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <style>
        /* Styles pour les filtres */
        .filter-container {
            display: flex;
            gap: 10px;
            flex-wrap: wrap;
            align-items: center;
            margin-bottom: 20px;
        }

        .filter-container .form-control,
        .filter-container .form-select {
            flex: 1;
            min-width: 200px;
        }

        .filter-container .btn {
            flex-shrink: 0;
        }

        @media (max-width: 768px) {
            .filter-container {
                flex-direction: column;
                align-items: stretch;
            }
            
            .filter-container .form-control,
            .filter-container .form-select,
            .filter-container .btn {
                width: 100%;
            }
        }

        /* Style pour le bouton d'import */
        .btn-import {
            position: relative;
            overflow: hidden;
            display: inline-block;
        }
        .btn-import input[type="file"] {
            position: absolute;
            top: 0;
            right: 0;
            min-width: 100%;
            min-height: 100%;
            font-size: 100px;
            text-align: right;
            filter: alpha(opacity=0);
            opacity: 0;
            outline: none;
            background: white;
            cursor: pointer;
            display: block;
        }

        /* Style pour la table avec d√©filement horizontal */
        .table-wrapper {
            border-radius: 8px;
            overflow-x: auto;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
            background: white;
            margin-bottom: 20px;
        }

        .table {
            width: 100%;
            min-width: 1000px; /* Largeur minimale pour forcer le d√©filement si n√©cessaire */
            margin-bottom: 0;
        }

        .table th {
            white-space: nowrap;
            position: sticky;
            top: 0;
            background-color: #343a40;
            color: white;
            z-index: 10;
        }

        .table td {
            vertical-align: middle;
        }

        .badge {
            font-size: 0.85em;
            font-weight: 500;
            padding: 5px 8px;
        }

        .badge-en_service {
            background-color: #28a745;
            color: white;
        }

        .badge-en_panne {
            background-color: #dc3545;
            color: white;
        }

        .badge-maintenance {
            background-color: #ffc107;
            color: #212529;
        }

        .badge-hors_service {
            background-color: #6c757d;
            color: white;
        }

        .action-buttons {
            display: flex;
            gap: 5px;
            flex-wrap: nowrap;
        }

        .qr-code-img {
            width: 50px;
            height: 50px;
            object-fit: cover;
            cursor: pointer;
            transition: transform 0.2s;
        }

        .qr-code-img:hover {
            transform: scale(1.5);
        }

        /* Style personnalis√© pour la barre de d√©filement */
        .table-wrapper::-webkit-scrollbar {
            height: 10px;
        }

        .table-wrapper::-webkit-scrollbar-track {
            background: #f1f1f1;
            border-radius: 0 0 8px 8px;
        }

        .table-wrapper::-webkit-scrollbar-thumb {
            background: #888;
            border-radius: 5px;
        }

        .table-wrapper::-webkit-scrollbar-thumb:hover {
            background: #555;
        }
    </style>
{% endblock %}

{% block body %}
    <div class="container mt-5">
        <h1 class="mb-4">üì¶ Liste des √âquipements</h1>

        <div class="mb-3 text-end">
            <a href="{{ path('app_equipement_new') }}" class="btn btn-success">
                ‚ûï Ajouter un √©quipement
            </a>
            
            <label class="btn btn-info btn-import ms-2">
                üì§ Importer Excel
                <input type="file" id="file-input" name="fichier_excel" accept=".xlsx,.xls" style="display: none;">
            </label>
        </div>

        <div class="filter-container">
            <input type="text" id="search-equipement" class="form-control" placeholder="Rechercher par nom ou r√©f√©rence...">
            
            <select id="filter-type" class="form-select">
                <option value="">Tous les types</option>
                <option value="informatique">Informatique</option>
                <option value="r√©seau">R√©seau</option>
                <option value="PC">PC</option>
                <option value="Imprimantes">Imprimantes</option>
                <option value="autres">Autres</option>
            </select>
            
            <button id="sort-equipement" class="btn btn-outline-secondary" data-order="desc" title="Trier">
                <span id="sort-icon">‚¨áÔ∏è</span>
            </button>
        </div>

        <div class="table-wrapper">
            <table class="table table-bordered table-hover table-striped align-middle">
                <thead class="table-dark">
                    <tr>
                        <th style="width: 3%;">#</th>
                        <th style="width: 10%;">Type</th>
                        <th style="width: 18%;">Nom</th>
                        <th style="width: 13%;">R√©f√©rence</th>
                        <th style="width: 15%;">Emplacement</th>
                        <th style="width: 13%;">Mod√®le</th>
                        <th style="width: 13%;">N¬∞ S√©rie</th>
                        <th style="width: 8%;">Etat</th>
                        <th style="width: 14%;">Actions</th>
                    </tr>
                </thead>
                <tbody id="equipement-results">
                    {% include 'equipement/_list.html.twig' with {'equipements': equipements} %}
                </tbody>
            </table>
        </div>
    </div>

    <!-- Modal pour afficher le QR Code en grand -->
    <div class="modal fade" id="qrModal" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-body text-center">
                    <img id="qrModalImage" src="" class="img-fluid">
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Fermer</button>
                </div>
            </div>
        </div>
    </div>

    <script>
    document.addEventListener('DOMContentLoaded', function() {
        // Gestion de la recherche et filtrage
        const searchInput = document.getElementById('search-equipement');
        const resultsTbody = document.getElementById('equipement-results');
        const sortBtn = document.getElementById('sort-equipement');
        const sortIcon = document.getElementById('sort-icon');
        const filterType = document.getElementById('filter-type');
        let order = 'desc';

        function fetchEquipements() {
            const query = searchInput.value;
            const type = filterType.value;
            
            fetch(`/equipement/search?q=${encodeURIComponent(query)}&order=${order}&type=${encodeURIComponent(type)}`)
                .then(response => response.text())
                .then(html => {
                    resultsTbody.innerHTML = html;
                });
        }

        searchInput.addEventListener('input', fetchEquipements);
        filterType.addEventListener('change', fetchEquipements);

        sortBtn.addEventListener('click', function(e) {
            e.preventDefault();
            order = order === 'desc' ? 'asc' : 'desc';
            sortIcon.textContent = order === 'desc' ? '‚¨áÔ∏è' : '‚¨ÜÔ∏è';
            fetchEquipements();
        });

        // Gestion de l'import Excel
        const fileInput = document.getElementById('file-input');
        
        fileInput.addEventListener('change', function(e) {
            if (this.files.length === 0) return;
            
            const formData = new FormData();
            formData.append('fichier_excel', this.files[0]);
            
            // Afficher un indicateur de chargement
            const originalBtnText = sortBtn.innerHTML;
            sortBtn.innerHTML = '<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Import en cours...';
            sortBtn.disabled = true;
            
            fetch('{{ path('app_equipement_import_excel') }}', {
                method: 'POST',
                body: formData
            })
            .then(response => {
                if (response.redirected) {
                    window.location.href = response.url;
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Une erreur est survenue lors de l\'importation');
            })
            .finally(() => {
                sortBtn.innerHTML = originalBtnText;
                sortBtn.disabled = false;
                fileInput.value = ''; // R√©initialiser l'input file
            });
        });
    });
    </script>
{% endblock %}